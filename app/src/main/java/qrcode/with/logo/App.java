/*
 * This source file was generated by the Gradle 'init' task
 */
package qrcode.with.logo;

import java.awt.*;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.InputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.Hashtable;

import javax.imageio.ImageIO;

import com.google.zxing.*;
import com.google.zxing.client.j2se.MatrixToImageWriter;
import com.google.zxing.common.BitMatrix;
import com.google.zxing.qrcode.decoder.ErrorCorrectionLevel;

public class App {

    public static void main(String[] args) {
        String qrData = "{\n" + //
                "  \"lsi\": \"VGZT-XFRB\",\n" + //
                "  \"serviceName\": \"Cloud Bank\",\n" + //
                "  \"expiry\": \"2018-05-28T22:03:14.264Z\",\n" + //
                "  \"location\": \"testLocation\"\n" + //
                "}";
                
        String outputFilename = "qr_verify.png";
        String brandLogo = "ibm_verify.png";

        int size = 400;

        // Set High error correction
        Hashtable<EncodeHintType, Object> hints = new Hashtable<>();
        hints.put(EncodeHintType.ERROR_CORRECTION, ErrorCorrectionLevel.H);
        hints.put(EncodeHintType.CHARACTER_SET, "UTF-8");

        try {
            // Generate matrix
            BitMatrix matrix = new MultiFormatWriter().encode(qrData, BarcodeFormat.QR_CODE, size, size, hints);
            BufferedImage qrImage = MatrixToImageWriter.toBufferedImage(matrix);

            // Load logo image
            InputStream logoStream = App.class.getClassLoader().getResourceAsStream(brandLogo);
            if (logoStream == null) {
                throw new FileNotFoundException(brandLogo + "not found in resources");
            }
            BufferedImage logo = ImageIO.read(logoStream);

            // Calculate the scale and center position
            int logoSize = size / 5; // 20% of QR size
            int centerX = (qrImage.getWidth() - logoSize) / 2;
            int centerY = (qrImage.getHeight() - logoSize) / 2;

            // Resize logo
            Image scaledLogo = logo.getScaledInstance(logoSize, logoSize, Image.SCALE_SMOOTH);
            BufferedImage combined = new BufferedImage(size, size, BufferedImage.TYPE_INT_ARGB);
            Graphics2D graphics2d = combined.createGraphics();

            // Draw QR and then logo
            graphics2d.drawImage(qrImage, 0, 0, null);
            graphics2d.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
            graphics2d.drawImage(scaledLogo, centerX, centerY, null);
            graphics2d.dispose();

            // 5. Write output image
            ImageIO.write(combined, "png", new File(outputFilename));
            System.out.println("QR with logo created: " + outputFilename);
        } catch (WriterException | IOException e) {
            e.printStackTrace();
        }
    }
}
